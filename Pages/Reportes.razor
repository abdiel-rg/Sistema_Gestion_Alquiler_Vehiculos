@page "/reportes"
@inject IAlquilerService DB
@attribute [Authorize]
<h3>Reportes</h3>

<br />
<br />

<h3>Listado de Vehículos Disponibles</h3>

<EditForm Model="true">
    <div class="col-6">
        <InputDate class="form-control" @bind-Value="FechaInicio"></InputDate>
    </div>
    <div class="col-6">
        <InputDate class="form-control" @bind-Value="FechaFin"></InputDate>
    </div>
</EditForm>

<style>
    .liltable th {
        text-align: center;
    }

    .liltable td {
        text-align: center;
    }
</style>

<div>
    <table class="liltable table table-hover">
        <thead class="thead-light">
            <tr>
                <th>Foto</th>
                <th>Tipo de Vehiculo</th>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Año</th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="@vehiculos" Context="vehiculo">
                <tr>
                    <td>
                        <img src="@vehiculo.Foto" style="width: 100px;" />
                    </td>
                    <td>@vehiculo.Tipo.Nombre</td>
                    <td>@vehiculo.Marca</td>
                    <td>@vehiculo.Modelo</td>
                    <td>@vehiculo.Anio</td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
</div>

<h3>Clientes que Deben</h3>
<div>
    <table class="liltable table table-hover">
        <thead class="thead-light">
            <tr>
                <th>Cédula de Cliente</th>
                <th>Nombre de Cliente</th>
                <th>Monto a Pagar</th>

            </tr>
        </thead>
        <tbody>
            <Virtualize Items="@clientesQueDeben">
                <tr>
                    <td>@context.Cliente.Cedula</td>
                    <td>@context.Cliente.Nombre @context.Cliente.Apellido</td>
                    <td>@context.montoPendiente.ToString("C2")</td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
</div>

<h3>Ubicaciones de Vehículos</h3>
<div class="form-row justify-content-center align-items-center">
    <RadzenGoogleMap Style="height:70vh; width: 70vw;"
                     Center="Center"
                     Data="markers" />
</div>

@code {
    DateTime FechaInicio { get; set; } = DateTime.Today;
    DateTime FechaFin { get; set; } = DateTime.Today.AddDays(1);

    List<Vehiculo> vehiculos = new();
    List<(Cliente Cliente, decimal montoPendiente)> clientesQueDeben = new();
    List<Vehiculo> vehiculosDisponibles;

    GoogleMapPosition Center = new()
    {
        Lat = 18.903088,
        Lng = -70.163137
    };

    List<RadzenGoogleMapMarker> markers = new();

#pragma warning disable BL0005

    protected override async Task OnInitializedAsync()
    {
        clientesQueDeben = await DB.GetClientesWhoOweMoney();
        vehiculos = await DB.GetAllVehiculos();

        foreach (var vehiculo in vehiculos)
        {
#pragma warning disable BL0005
            markers.Add(new()
            {
                Position = new()
                {
                    Lat = vehiculo.Latitud,
                    Lng = vehiculo.Longitud
                },
                Title = $"Vehículo: {vehiculo.Marca} {vehiculo.Modelo} {vehiculo.Anio} {vehiculo.Color}\n" +
                        $"Últimas Reservas: \n" +
                        string.Join("\n", vehiculo.Reservas.Take(3).Select(r =>
                        $"\tCliente: {r.Cliente.Nombre} {r.Cliente.Apellido}\n" +
                        $"\tFecha de Inicio: {r.FechaInicio.ToShortDateString()}\n" +
                        $"\tFecha de Fin: {r.FechaFin.ToShortDateString()}\n"))
            });
#pragma warning restore BL0005
        }
    }
}
