@page "/reportes"
@inject IAlquilerService DB

<h3>Reportes</h3>

<br />
<br />

<h3>Listado de vehículos</h3>

<div>
    <table class="table table-hover">
        <thead class="thead-light">
            <tr>
                <th>Foto</th>
                <th>Tipo de Vehiculo</th>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Año</th>
            </tr>
        </thead>
        <tbody>
            <Virtualize Items="@vehiculos" Context="vehiculo">
                <tr>
                    <td>
                        <img src="@vehiculo.Foto" style="width: 100px;" />
                    </td>
                    <td>@vehiculo.Tipo.Nombre</td>
                    <td>@vehiculo.Marca</td>
                    <td>@vehiculo.Modelo</td>
                    <td>@vehiculo.Anio</td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
</div>

<h3>Clientes que deben</h3>
<div>
    <table class="table table-hover">
        <thead class="thead-light">
            <tr>
                <th>Cedula de cliente</th>
                <th>Nombre de Clientes</th>
                <th>Monto a pagar</th>

            </tr>
        </thead>
        <tbody>
            <Virtualize Items="@clientesQueDeben">
                <tr>
                    <td>@context.Cliente.Cedula</td>
                    <td>@context.Cliente.Nombre @context.Cliente.Apellido</td>
                    <td>@context.montoPendiente</td>
                </tr>
            </Virtualize>
        </tbody>
    </table>
</div>

<h3>Ver vehículos en Mapa</h3>

@code {
    List<Vehiculo> vehiculos = new();
    List<(Cliente Cliente, decimal montoPendiente)> clientesQueDeben = new();

    protected override async Task OnInitializedAsync()
    {
        clientesQueDeben = await DB.GetClientesWhoOweMoney();
        vehiculos = await DB.GetAllVehiculos();
    }
}
