@page "/gestion_vehiculos"
@page "/gestion_vehiculos/{VehiculoID:int?}"
@using Microsoft.Extensions.Configuration;
@using Radzen
@using Radzen.Blazor
@inject IAlquilerService DB
@inject IFileService FileService
@inject IConfiguration Configuration
@inject NavigationManager Nav

<h3>Gestion Vehiculos</h3>

<EditForm Model="vehiculo" OnValidSubmit="@GuardarVehiculo" OnInvalidSubmit="@(() => Console.WriteLine("Invalido"))">
    <DataAnnotationsValidator />

    <div class="form-row justify-content-center align-items-center">
        <img src="@(vehiculo.Foto ?? placeholderImage)"
             class="placeholder-image" />
    </div>
    <div class="form-row justify-content-center align-items-center">
        <div class="input-group col-md-2">
            <InputFile OnChange="SetFotoVehiculo" class="form-control-file mt-3" @bind-Value="@vehiculo.Foto" accept="image/*" />
        </div>
    </div>


    <div class="form-row justify-content-center align-items-center">
        <div class="form-group col-md-4">
            <label class="form-label">Marca</label>
            <InputText class="form-control" @bind-Value="@vehiculo.Marca"></InputText>
        </div>
        <div class="form-group col-md-2">
            <label class="form-label">Año</label>
            <InputNumber class="form-control" @bind-Value="@vehiculo.Anio"
                         min="1900"
                         max="2099"
                         step="1" />
        </div>
    </div>

    <div class="form-row justify-content-center align-items-center">
        <div class="form-group col-md-4">
            <label class="form-label">Modelo</label>
            <InputText class="form-control" @bind-Value="@vehiculo.Modelo"></InputText>
        </div>
        <div class="form-group col-md-2">
            <label class="form-label">Color</label>
            <InputText class="form-control" @bind-Value="@vehiculo.Color"></InputText>
        </div>
    </div>

    <div class="form-row justify-content-center align-items-center">
        <div class="form-group col-md-2">
            <label class="form-label">Precio por Día</label>
            <InputNumber class="form-control" @bind-Value="@vehiculo.PrecioPorDia"></InputNumber>
        </div>
        <div class="form-group col-md-2">
            <label class="form-label">Capacidad de Carga (kg)</label>
            <InputNumber class="form-control" @bind-Value="@vehiculo.CapacidadCarga"></InputNumber>
        </div>
        <div class="form-group col-md-2">
            <label class="form-label">Cantidad de Pasajeros</label>
            <InputNumber class="form-control" @bind-Value="@vehiculo.Pasajeros"></InputNumber>
        </div>
    </div>

    <div class="form-row justify-content-center align-items-center">
        <div class="form-group col-md-3">
            <label class="form-label">Tipo de Vehículo</label>
            <InputSelect @bind-Value="@vehiculo.TipoID" class="form-control">
                @foreach (var tp in @tiposVehiculo)
                {
                    <option value="@tp.ID">@tp.Nombre</option>
                }
            </InputSelect>
        </div>
        <div class="form-group col-md-3">
            <label class="form-label">Número de Seguro</label>
            <InputText class="form-control" @bind-Value="vehiculo.NumeroSeguro"></InputText>
        </div>
    </div>

    <div class="form-row justify-content-center align-items-center">
        <div class="form-group col-md-3">
            <label class="form-label">Latitud</label>
            <InputNumber class="form-control" @bind-Value="vehiculo.Latitud"></InputNumber>
        </div>

        <div class="form-group col-md-3">
            <label class="form-label">Longitud</label>
            <InputNumber class="form-control" @bind-Value="vehiculo.Longitud"></InputNumber>
        </div>
    </div>

    <div class="form-row justify-content-center align-items-center">
        <div class="form-group col-md-6">
            <label class="form-label">Matrícula</label>
            <InputText class="form-control" @bind-Value="vehiculo.Matricula"></InputText>
        </div>
    </div>

    <div class="form-row justify-content-center align-items-center">
        <label class="form-label">Seleccione su ubicación en el mapa</label>
        <RadzenGoogleMap Center="Center"
                         Data="markers"
                         MapClick="SetMarker" />
    </div>

    <div class="row">
        <button type="submit" class="@buttonStyle mx-auto">@buttonText</button>
    </div>
</EditForm>

@code {
    #nullable enable

    [Parameter]
    public int? VehiculoID { get; set; }

    private string buttonStyle { get; set; } = string.Empty;
    private string buttonText { get; set; } = string.Empty;

    string placeholderImage = string.Empty;

    Vehiculo vehiculo = new()
    {
        Anio = DateTime.Now.Year
    };

    async Task GuardarVehiculo()
    {
        await DB.SaveVehiculo(vehiculo);
        Nav.NavigateTo("/listado_vehiculos", forceLoad: true);
    }

    List<TipoVehiculo> tiposVehiculo = new();

    GoogleMapPosition Center = new()
    {
        Lat = 18.903088,
        Lng = -70.163137
    };

    List<RadzenGoogleMapMarker> markers = new();

#pragma warning disable BL0005

    void SetMarker(GoogleMapClickEventArgs args)
    {
        Center = args.Position;

        markers.Clear();
        markers.Add(
            new() { Position = args.Position }
        );

        vehiculo.Latitud = args.Position.Lat;
        vehiculo.Longitud = args.Position.Lng;
    }

    public async Task SetFotoVehiculo(InputFileChangeEventArgs args)
    {
        vehiculo.Foto = await FileService.ToBase64StringAsync(args.File);
        this.StateHasChanged();
    }

    protected override async Task OnParametersSetAsync()
    {
        placeholderImage = Configuration.GetValue<string>("PlaceholderImageURL");

        tiposVehiculo = await DB.GetTiposVehiculo();

        buttonStyle = "btn btn-primary";
        buttonText = "Agregar";
        if (VehiculoID is null)
        {
            return;
        }
        else if (VehiculoID <= 0)
        {
            Nav.NavigateTo("/gestion_vehiculos", forceLoad: true);
        }
        else
        {
            buttonStyle = "btn btn-success";
            buttonText = "Editar";

            vehiculo = (await DB.FindVehiculo((int)VehiculoID))!;
        }
    }
}
